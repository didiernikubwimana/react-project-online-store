{"ast":null,"code":"import { GET_USER_INFO, LOGIN_FETCH_SUCCESS, LOGOUT, SET_USER } from \"../constants/constants\";\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { cartReducer } from '../reducers/cartReducers';\nexport const INITIAL_STATE = {\n  headers: null,\n  oAuthToken: localStorage.getItem('oAuthToken'),\n  refreshToken: '',\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n};\n\nconst AuthReducer = (state = [], action) => {\n  switch (action.type) {\n    case LOGOUT:\n      localStorage.removeItem('userInfo');\n      localStorage.removeItem('oAuthToken');\n      return INITIAL_STATE;\n\n    case SET_USER:\n      let userInfo = JSON.parse(action.payload);\n\n      switch (userInfo.roles[0][\"id\"]) {\n        case 1:\n          userInfo.isSeller = false;\n          userInfo.isAdmin = true;\n          userInfo.isBuyer = false;\n          break;\n\n        case 2:\n          userInfo.isSeller = true;\n          userInfo.isAdmin = false;\n          userInfo.isBuyer = false;\n          break;\n\n        case 3:\n          userInfo.isSeller = false;\n          userInfo.isAdmin = false;\n          userInfo.isBuyer = true;\n          break;\n      }\n\n      const newUserInfo = JSON.stringify(userInfo);\n      localStorage.setItem('userInfo', newUserInfo);\n      return { ...state,\n        newUserInfo\n      };\n\n    case LOGIN_FETCH_SUCCESS:\n      const oAuthToken = action.payload;\n      localStorage.setItem('oAuthToken', oAuthToken);\n      return { ...state,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Authorization': 'Bearer ' + action.payload\n        },\n        oAuthToken: oAuthToken\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nconst store = createStore(AuthReducer, INITIAL_STATE);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/Users/didier/Downloads/Projet/project/react-project-online-store/src/store/store.js"],"names":["GET_USER_INFO","LOGIN_FETCH_SUCCESS","LOGOUT","SET_USER","createStore","compose","applyMiddleware","combineReducers","cartReducer","INITIAL_STATE","headers","oAuthToken","localStorage","getItem","refreshToken","userInfo","JSON","parse","AuthReducer","state","action","type","removeItem","payload","roles","isSeller","isAdmin","isBuyer","newUserInfo","stringify","setItem","store"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,mBAAvB,EAA4CC,MAA5C,EAAoDC,QAApD,QAAmE,wBAAnE;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAGA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,OAAO,EAAE,IADkB;AAE3BC,EAAAA,UAAU,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAFe;AAG3BC,EAAAA,YAAY,EAAE,EAHa;AAI3BC,EAAAA,QAAQ,EAAEH,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCG,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlC,GAAgF;AAJ/D,CAAtB;;AAQP,MAAMK,WAAW,GAAE,CAACC,KAAK,GAAE,EAAR,EAAWC,MAAX,KAAqB;AACtC,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKnB,MAAL;AACEU,MAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,MAAAA,YAAY,CAACU,UAAb,CAAwB,YAAxB;AACA,aAAOb,aAAP;;AACF,SAAKN,QAAL;AACE,UAAKY,QAAQ,GAAIC,IAAI,CAACC,KAAL,CAAWG,MAAM,CAACG,OAAlB,CAAjB;;AACA,cAAQR,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkB,IAAlB,CAAR;AACE,aAAK,CAAL;AACET,UAAAA,QAAQ,CAACU,QAAT,GAAoB,KAApB;AACAV,UAAAA,QAAQ,CAACW,OAAT,GAAoB,IAApB;AACAX,UAAAA,QAAQ,CAACY,OAAT,GAAmB,KAAnB;AACA;;AACF,aAAK,CAAL;AACEZ,UAAAA,QAAQ,CAACU,QAAT,GAAoB,IAApB;AACAV,UAAAA,QAAQ,CAACW,OAAT,GAAoB,KAApB;AACAX,UAAAA,QAAQ,CAACY,OAAT,GAAmB,KAAnB;AACA;;AACF,aAAK,CAAL;AACEZ,UAAAA,QAAQ,CAACU,QAAT,GAAoB,KAApB;AACAV,UAAAA,QAAQ,CAACW,OAAT,GAAoB,KAApB;AACAX,UAAAA,QAAQ,CAACY,OAAT,GAAmB,IAAnB;AACA;AAfJ;;AAiBA,YAAMC,WAAW,GAAIZ,IAAI,CAACa,SAAL,CAAed,QAAf,CAArB;AACAH,MAAAA,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAgCF,WAAhC;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWS,QAAAA;AAAX,OAAP;;AAEF,SAAK3B,mBAAL;AACE,YAAOU,UAAU,GAAIS,MAAM,CAACG,OAA5B;AACAX,MAAAA,YAAY,CAACkB,OAAb,CAAqB,YAArB,EAAkCnB,UAAlC;AACA,aAAO,EAAE,GAAGQ,KAAL;AAAYT,QAAAA,OAAO,EAAC;AAAC,yCAA+B,GAAhC;AACC,2BAAiB,YAAYU,MAAM,CAACG;AADrC,SAApB;AAEaZ,QAAAA,UAAU,EAACA;AAFxB,OAAP;;AAIF;AACE,aAAOQ,KAAP;AArCJ;AAwCD,CAzCD;;KAAMD,W;AA6CN,MAAMa,KAAK,GAAG3B,WAAW,CAACc,WAAD,EAAaT,aAAb,CAAzB;AAEA,eAAesB,KAAf","sourcesContent":["import {GET_USER_INFO, LOGIN_FETCH_SUCCESS, LOGOUT, SET_USER} from \"../constants/constants\";\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { cartReducer } from '../reducers/cartReducers';\n\n\nexport const INITIAL_STATE = {\n  headers: null,\n  oAuthToken: localStorage.getItem('oAuthToken'),\n  refreshToken: '',\n  userInfo: localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo')): null\n};\n\n\nconst AuthReducer =(state =[],action) =>{\n  switch (action.type) {\n\n    case LOGOUT:\n      localStorage.removeItem('userInfo');\n      localStorage.removeItem('oAuthToken');\n      return INITIAL_STATE;\n    case SET_USER:\n      let  userInfo  = JSON.parse(action.payload);\n      switch (userInfo.roles[0][\"id\"]){\n        case 1:\n          userInfo.isSeller = false;\n          userInfo.isAdmin =  true;\n          userInfo.isBuyer = false;\n          break;\n        case 2:\n          userInfo.isSeller = true;\n          userInfo.isAdmin =  false;\n          userInfo.isBuyer = false;\n          break;\n        case 3:\n          userInfo.isSeller = false;\n          userInfo.isAdmin =  false;\n          userInfo.isBuyer = true;\n          break;\n      }\n      const newUserInfo  = JSON.stringify(userInfo);\n      localStorage.setItem('userInfo',newUserInfo);\n      return {...state, newUserInfo }\n\n    case LOGIN_FETCH_SUCCESS:\n      const  oAuthToken  = action.payload;\n      localStorage.setItem('oAuthToken',oAuthToken);\n      return { ...state, headers:{'Access-Control-Allow-Origin': '*',\n                                  'Authorization': 'Bearer ' + action.payload},\n                          oAuthToken:oAuthToken};\n\n    default:\n      return state;\n  }\n\n}\n\n\n\nconst store = createStore(AuthReducer,INITIAL_STATE)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}