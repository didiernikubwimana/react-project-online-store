{"ast":null,"code":"var _jsxFileName = \"/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport { APIConfig } from \"../../store/API-Config\";\nimport { SET_USER } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const APIs = useContext(APIConfig);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [phNumber, setPhNumber] = useState('');\n  const [userInfo, setUserInfo] = useState(null);\n  const dispatch = useDispatch();\n  const state = store.getState();\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Authorization': 'Bearer ' + state.oAuthToken\n  };\n\n  const loadCurrentData = () => {\n    axios(APIs.userAPI + \"/current\", {\n      headers\n    }).then(response => {\n      const info = JSON.stringify(response.data);\n      dispatch({\n        type: SET_USER,\n        payload: info\n      });\n      setUserInfo(state.userInfo);\n      setFirstName(state.userInfo.firstName);\n      setLastName(state.userInfo.lastName);\n      setPhNumber(state.userInfo.phoneNumber);\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  useEffect(() => {\n    loadCurrentData();\n  }, []);\n\n  const submitUserprofileHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      axios.post(APIs.userAPI + \"/update\", {\n        username: userInfo.username,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        phoneNumber: phNumber\n      }, {\n        headers\n      }).then(response => {\n        alert(\"Updated successfully\");\n        const info = JSON.stringify(response.data);\n        dispatch({\n          type: SET_USER,\n          payload: info\n        });\n        document.location.href = '/';\n      }).catch(error => {\n        alert(error.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitUserprofileHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"First Name\",\n            type: \"text\",\n            id: \"firstName\",\n            placeholder: \"Enter First name\",\n            required: true,\n            onChange: e => setFirstName(e.target.value),\n            defaultValue: userInfo.firstName,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Last Name\",\n            type: \"text\",\n            id: \"LastName\",\n            placeholder: \"Enter Last name\",\n            required: true,\n            onChange: e => setLastName(e.target.value),\n            defaultValue: userInfo.lastName,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Phone Number\",\n            type: \"number\",\n            id: \"phNumber\",\n            placeholder: \"Enter Phone Number\",\n            defaultValue: userInfo.phoneNumber,\n            required: true,\n            onChange: e => setPhNumber(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Confirm Password\",\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter confirm password\",\n            onChange: e => setConfirmPassword(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            size: \"large\",\n            variant: \"contained\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"RcNyflf4lWLtaJ/PF4mYXB4IAjE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Profile/Profile.js"],"names":["React","useContext","useEffect","useState","store","axios","APIConfig","SET_USER","useDispatch","Button","TextField","Profile","APIs","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","phNumber","setPhNumber","userInfo","setUserInfo","dispatch","state","getState","headers","oAuthToken","loadCurrentData","userAPI","then","response","info","JSON","stringify","data","type","payload","phoneNumber","catch","error","alert","message","submitUserprofileHandler","e","preventDefault","post","username","document","location","href","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport {APIConfig} from \"../../store/API-Config\";\nimport {SET_USER} from \"../../constants/constants\";\nimport {useDispatch} from \"react-redux\";\nimport { Button, TextField } from \"@material-ui/core\";\n\n\n\nconst  Profile = () =>{\n    const APIs = useContext(APIConfig);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [phNumber, setPhNumber] = useState('');\n    const [userInfo, setUserInfo ] = useState(null);\n    const dispatch = useDispatch();\n    const state = store.getState();\n    const headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + state.oAuthToken,\n    }\n\n\n\nconst loadCurrentData = ()=>{\n    axios(APIs.userAPI + \"/current\",{headers})\n        .then(response=>{\n            const info = JSON.stringify(response.data);\n            dispatch({\n                type: SET_USER,\n                payload: info\n            })\n            setUserInfo(state.userInfo);\n            setFirstName(state.userInfo.firstName);\n            setLastName(state.userInfo.lastName);\n            setPhNumber(state.userInfo.phoneNumber);\n\n        }).catch(error => {\n        alert(error.message);\n    })\n}\n\nuseEffect(()=>{\n    loadCurrentData();\n\n},[]);\n\n    const submitUserprofileHandler = (e) => {\n        e.preventDefault();\n        // dispatch update profile\n        if (password !== confirmPassword) {\n            alert('Password and Confirm Password Are Not Matched');\n        } else {\n\n            axios.post(APIs.userAPI + \"/update\", {\n                username:userInfo.username,\n                firstName:firstName,\n                lastName:lastName,\n                password:password,\n                phoneNumber:phNumber\n\n            }, {headers}).then(response => {\n                alert(\"Updated successfully\");\n                const info = JSON.stringify(response.data);\n                dispatch({\n                    type: SET_USER,\n                    payload: info\n                })\n                document.location.href = '/';\n            })\n                .catch(error => {\n                    alert(error.message);\n                })\n\n        }\n    };\n\n    return (\n\n        <div>\n            <form className=\"form\" onSubmit={submitUserprofileHandler}>\n\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {userInfo && (\n                <div className=\"form\" >\n                    <div>\n                        <TextField\n                        label=\"First Name\"\n                            type=\"text\"\n                            id=\"firstName\"\n                            placeholder=\"Enter First name\"\n                            required\n                            onChange={(e) => setFirstName(e.target.value)}\n                            defaultValue={userInfo.firstName} variant=\"outlined\"/>\n                    </div>\n                    <div>\n                    <TextField\n                    label=\"Last Name\"\n                    type=\"text\"\n                    id=\"LastName\"\n                    placeholder=\"Enter Last name\"\n                    required\n                    onChange={(e) => setLastName(e.target.value)}\n                    defaultValue={userInfo.lastName} variant=\"outlined\"/>\n                    </div>\n                    <div>\n                    <TextField\n                    label=\"Phone Number\"\n                    type=\"number\"\n                    id=\"phNumber\"\n                    placeholder=\"Enter Phone Number\"\n                    defaultValue={userInfo.phoneNumber}\n                    required\n                    onChange={(e) => setPhNumber(e.target.value)} variant=\"outlined\">\n                        \n                    </TextField>\n                    </div>\n                    <div>\n                    <TextField\n                    label=\"Password\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    variant=\"outlined\"\n                    ></TextField>\n                    </div>\n                    <div>\n                    <TextField\n                    label=\"Confirm Password\"\n                    id=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Enter confirm password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    variant=\"outlined\"\n                    ></TextField>\n                    </div>\n\n                    <div>\n                    <label />\n                    <Button color=\"primary\" type=\"submit\" size=\"large\" variant=\"contained\" >\n                    Update\n                    </Button>\n                    </div>\n                </div>\n                )}\n\n\n            </form>\n        </div>\n\n    );\n}\n\nexport default  Profile;"]},"metadata":{},"sourceType":"module"}