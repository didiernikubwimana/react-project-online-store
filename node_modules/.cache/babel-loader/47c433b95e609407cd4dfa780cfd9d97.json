{"ast":null,"code":"var _jsxFileName = \"/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport { APIConfig } from \"../../store/API-Config\";\nimport { SET_USER } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loadData = () => {\n  axios(APIs.userAPI + \"/current\", {\n    headers\n  }).then(response => {\n    const info = JSON.stringify(response.data);\n    dispatch({\n      type: SET_USER,\n      payload: info\n    });\n    setUserInfo(state.userInfo);\n    setFirstName(state.userInfo.firstName);\n    setLastName(state.userInfo.lastName);\n    setPhNumber(state.userInfo.phoneNumber);\n  }).catch(error => {\n    alert(error.message);\n  });\n};\n\nuseEffect(() => {\n  loadData();\n}, []);\n\nconst Profile = () => {\n  _s();\n\n  const APIs = useContext(APIConfig);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [phNumber, setPhNumber] = useState('');\n  const [userInfo, setUserInfo] = useState(null);\n  const dispatch = useDispatch();\n  const state = store.getState();\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Authorization': 'Bearer ' + state.oAuthToken\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      axios.post(APIs.userAPI + \"/update\", {\n        username: userInfo.username,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        phoneNumber: phNumber\n      }, {\n        headers\n      }).then(response => {\n        alert(\"Updated successfully\");\n        const info = JSON.stringify(response.data);\n        dispatch({\n          type: SET_USER,\n          payload: info\n        });\n        document.location.href = '/';\n      }).catch(error => {\n        alert(error.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            placeholder: \"Enter First name\",\n            required: true,\n            onChange: e => setFirstName(e.target.value),\n            defaultValue: userInfo.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"LastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"LastName\",\n            placeholder: \"Enter Last name\",\n            required: true,\n            onChange: e => setLastName(e.target.value),\n            defaultValue: userInfo.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phNumber\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"phNumber\",\n            placeholder: \"Enter Phone Number\",\n            defaultValue: userInfo.phoneNumber,\n            required: true,\n            onChange: e => setPhNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter confirm password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"F+g/iqBLfp37niJo6cjRLuzN+Gk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Profile/Profile.js"],"names":["React","useContext","useEffect","useState","store","axios","APIConfig","SET_USER","useDispatch","loadData","APIs","userAPI","headers","then","response","info","JSON","stringify","data","dispatch","type","payload","setUserInfo","state","userInfo","setFirstName","firstName","setLastName","lastName","setPhNumber","phoneNumber","catch","error","alert","message","Profile","password","setPassword","confirmPassword","setConfirmPassword","phNumber","getState","oAuthToken","submitHandler","e","preventDefault","post","username","document","location","href","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport {APIConfig} from \"../../store/API-Config\";\nimport {SET_USER} from \"../../constants/constants\";\nimport {useDispatch} from \"react-redux\";\n\n\n\nconst loadData = ()=>{\n    axios(APIs.userAPI + \"/current\",{headers})\n        .then(response=>{\n            const info = JSON.stringify(response.data);\n            dispatch({\n                type: SET_USER,\n                payload: info\n            })\n            setUserInfo(state.userInfo);\n            setFirstName(state.userInfo.firstName);\n            setLastName(state.userInfo.lastName);\n            setPhNumber(state.userInfo.phoneNumber);\n\n        }).catch(error => {\n        alert(error.message);\n    })\n}\n\nuseEffect(()=>{\n    loadData();\n\n},[]);\n\nconst  Profile = () =>{\n    const APIs = useContext(APIConfig);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [phNumber, setPhNumber] = useState('');\n    const [userInfo, setUserInfo ] = useState(null);\n    const dispatch = useDispatch();\n    const state = store.getState();\n    const headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + state.oAuthToken,\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch update profile\n        if (password !== confirmPassword) {\n            alert('Password and Confirm Password Are Not Matched');\n        } else {\n\n            axios.post(APIs.userAPI + \"/update\", {\n                username:userInfo.username,\n                firstName:firstName,\n                lastName:lastName,\n                password:password,\n                phoneNumber:phNumber\n\n            }, {headers}).then(response => {\n                alert(\"Updated successfully\");\n                const info = JSON.stringify(response.data);\n                dispatch({\n                    type: SET_USER,\n                    payload: info\n                })\n                document.location.href = '/';\n            })\n                .catch(error => {\n                    alert(error.message);\n                })\n\n        }\n    };\n\n    return (\n\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {userInfo && (\n                <div className=\"form\" >\n                    <div>\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"firstName\"\n                            placeholder=\"Enter First name\"\n                            required\n                            onChange={(e) => setFirstName(e.target.value)}\n                            defaultValue={userInfo.firstName}/>\n                    </div>\n                    <div>\n                    <label htmlFor=\"LastName\">Last Name</label>\n                    <input\n                    type=\"text\"\n                    id=\"LastName\"\n                    placeholder=\"Enter Last name\"\n                    required\n                    onChange={(e) => setLastName(e.target.value)}\n                    defaultValue={userInfo.lastName}/>\n                    </div>\n                    <div>\n                    <label htmlFor=\"phNumber\">Phone Number</label>\n                    <input\n                    type=\"number\"\n                    id=\"phNumber\"\n                    placeholder=\"Enter Phone Number\"\n                    defaultValue={userInfo.phoneNumber}\n                    required\n                    onChange={(e) => setPhNumber(e.target.value)}>\n                    </input>\n                    </div>\n                    <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    ></input>\n                    </div>\n                    <div>\n                    <label htmlFor=\"confirmPassword\">confirm Password</label>\n                    <input\n                    id=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Enter confirm password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></input>\n                    </div>\n\n                    <div>\n                    <label />\n                    <button className=\"primary\" type=\"submit\">\n                    Update\n                    </button>\n                    </div>\n                </div>\n                )}\n\n\n            </form>\n        </div>\n\n    );\n}\n\nexport default  Profile;"]},"metadata":{},"sourceType":"module"}