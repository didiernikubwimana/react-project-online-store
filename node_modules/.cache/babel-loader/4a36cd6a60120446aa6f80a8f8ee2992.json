{"ast":null,"code":"var _jsxFileName = \"/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Orders/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { APIConfig } from \"../../store/API-Config\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const APIs = useContext(APIConfig);\n  const [orders, setOrders] = useState([]);\n  const state = store.getState();\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Authorization': 'Bearer ' + state.oAuthToken\n  };\n\n  const cancelHandler = order => {\n    axios(APIs.orderAPI + \"/\" + order.id + \"/cancel\", {\n      headers\n    }).then(response => {\n      if (response.data === true) {\n        loadData();\n      }\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  const pdfHandler = () => {\n    axios(APIs.orderAPI + \"/export/pdf\", {\n      responseType: 'arraybuffer',\n      headers\n    }).then(response => {\n      if (response.data) {\n        const fileURL = URL.createObjectURL(new Blob([response.data], {\n          type: \"application/pdf\"\n        }));\n        window.open(fileURL, \"_blank\");\n      }\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  const loadData = () => {\n    axios(APIs.orderAPI, {\n      headers\n    }).then(response => {\n      const info = JSON.stringify(response.data);\n      setOrders(response.data);\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List Of Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"small\",\n      onClick: () => pdfHandler(),\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ACTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.orderDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalMoney\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.currentStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.currentStatus != \"CANCELLED\" && order.currentStatus != \"SHIPPED\" && order.currentStatus != \"DELIVERED\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"small\",\n              onClick: () => cancelHandler(order),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orders, \"L5eE1uh9fH3ltWUvKs15B3Nc0wY=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/didier/Downloads/Projet/project/react-project-online-store/src/components/Orders/Orders.js"],"names":["React","useContext","useEffect","useState","APIConfig","store","axios","Link","Orders","APIs","orders","setOrders","state","getState","headers","oAuthToken","cancelHandler","order","orderAPI","id","then","response","data","loadData","catch","error","alert","message","pdfHandler","responseType","fileURL","URL","createObjectURL","Blob","type","window","open","info","JSON","stringify","map","orderDate","totalMoney","currentStatus"],"mappings":"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","sourcesContent":["\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {APIConfig} from \"../../store/API-Config\";\nimport store from \"../../store/store\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nconst  Orders = ()=>{\n    const APIs = useContext(APIConfig);\n    const [orders,setOrders] = useState([]);\n    const state = store.getState();\n    const headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + state.oAuthToken,\n    }\n    const cancelHandler = (order) => {\n        axios(APIs.orderAPI + \"/\" + order.id+ \"/cancel\", {headers})\n            .then(response => {\n                if(response.data === true){\n                    loadData();\n                }\n            }).catch(error => {\n            alert(error.message);\n        })\n    };\n\n    const pdfHandler = () => {\n        axios(APIs.orderAPI + \"/export/pdf\", {responseType: 'arraybuffer',headers})\n            .then(response => {\n                if(response.data){\n                    const fileURL = URL.createObjectURL( new Blob([response.data], { type: \"application/pdf\" }));\n\n                    window.open(fileURL, \"_blank\");\n                }\n            }).catch(error => {\n            alert(error.message);\n        })\n    };\n\n    const loadData = ()=>{\n            axios(APIs.orderAPI ,{headers})\n                .then(response=>{\n                    const info = JSON.stringify(response.data);\n                    setOrders(response.data);\n                }).catch(error => {\n                alert(error.message);\n            })\n        }\n    useEffect(()=>{\n        loadData();\n    },[]);\n    return (\n        <div>\n            <h1>List Of Orders</h1>\n            <button\n                type=\"button\"\n                className=\"small\"\n                onClick={() => pdfHandler()}\n            >\n                Download PDF\n            </button>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>DATE</th>\n                    <th>TOTAL</th>\n                    <th>STATUS</th>\n                    <th>ACTIONS</th>\n                </tr>\n                </thead>\n                <tbody>\n                {orders && orders.map((order) => (\n                    <tr key={order.id}>\n                        <td>{order.id}</td>\n                        <td>{order.orderDate}</td>\n                        <td>{order.totalMoney}</td>\n                        <td>{order.currentStatus}</td>\n                        <td>\n                            {order.currentStatus != \"CANCELLED\" &&\n                                order.currentStatus != \"SHIPPED\" && order.currentStatus != \"DELIVERED\" && (\n                            <button\n                                type=\"button\"\n                                className=\"small\"\n                                onClick={() => cancelHandler(order)}\n                            >\n                                Cancel\n                            </button>\n                            )}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport  default  Orders;"]},"metadata":{},"sourceType":"module"}